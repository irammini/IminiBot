"""Re-create all tables for host

Revision ID: 8524fa1fa855
Revises: 
Create Date: 2025-08-01 13:37:52.908745

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8524fa1fa855'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('key', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('action', sa.Text(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chaos_stats',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('high_score', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('daily_quests',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('quest', sa.Text(), nullable=False),
    sa.Column('special', sa.Boolean(), nullable=True),
    sa.Column('date', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('required', sa.Integer(), nullable=False),
    sa.Column('reward_coin', sa.Integer(), nullable=True),
    sa.Column('reward_xp', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('goal', sa.Integer(), nullable=True),
    sa.Column('reward_coin', sa.Integer(), nullable=True),
    sa.Column('reward_xp', sa.Integer(), nullable=True),
    sa.Column('reward_role', sa.String(), nullable=True),
    sa.Column('reward_badge', sa.String(), nullable=True),
    sa.Column('ends_at', sa.BigInteger(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('giftcodes',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('coin', sa.Integer(), nullable=True),
    sa.Column('items', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('expires_at', sa.BigInteger(), nullable=True),
    sa.Column('max_usage', sa.Integer(), nullable=True),
    sa.Column('per_user_cooldown', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.BigInteger(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('allowed_user_ids', postgresql.ARRAY(sa.BigInteger()), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('items',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('emoji', sa.String(), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.Column('rarity', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('base_pay', sa.Integer(), nullable=False),
    sa.Column('mastery_req', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('minigames',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('total_played', sa.Integer(), nullable=True),
    sa.Column('total_wins', sa.Integer(), nullable=True),
    sa.Column('longest_streak', sa.Integer(), nullable=True),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('last_game', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('secret_unlocks',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('unlock_key', sa.String(), nullable=False),
    sa.Column('unlocked_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'unlock_key')
    )
    op.create_table('shop_items',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('stock', sa.Integer(), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=True),
    sa.Column('rarity', sa.Text(), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=True),
    sa.Column('category', sa.VARCHAR(), nullable=True),
    sa.Column('emoji', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_meta',
    sa.Column('key', sa.Text(), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('thank_logs',
    sa.Column('sender_id', sa.BigInteger(), nullable=False),
    sa.Column('receiver_id', sa.BigInteger(), nullable=False),
    sa.Column('timestamp', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('sender_id', 'receiver_id')
    )
    op.create_table('trivia_questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('options', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trust_logs',
    sa.Column('giver_id', sa.BigInteger(), nullable=False),
    sa.Column('receiver_id', sa.BigInteger(), nullable=False),
    sa.Column('timestamp', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('giver_id', 'receiver_id')
    )
    op.create_table('user_events',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('event_key', sa.String(), nullable=False),
    sa.Column('claimed_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'event_key')
    )
    op.create_table('user_giftcodes',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('used_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'code')
    )
    op.create_table('user_quests',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('quest_key', sa.String(), nullable=False),
    sa.Column('period', sa.String(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('req', sa.Integer(), nullable=True),
    sa.Column('reward_coin', sa.Integer(), nullable=True),
    sa.Column('reward_xp', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=True),
    sa.Column('expires_at', sa.BigInteger(), nullable=True),
    sa.Column('completed_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'quest_key')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('imini_id', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=True),
    sa.Column('xp', sa.BigInteger(), nullable=True),
    sa.Column('level', sa.BigInteger(), nullable=False),
    sa.Column('voice_time', sa.Float(), nullable=True),
    sa.Column('streak', sa.BigInteger(), nullable=True),
    sa.Column('last_daily', sa.Integer(), nullable=True),
    sa.Column('wallet', sa.DECIMAL(precision=38, scale=0), nullable=True),
    sa.Column('bank_balance', sa.BigInteger(), nullable=True),
    sa.Column('bank_limit', sa.BigInteger(), nullable=True),
    sa.Column('debt', sa.BigInteger(), nullable=True),
    sa.Column('job', sa.String(), nullable=True),
    sa.Column('mastery', sa.BigInteger(), nullable=True),
    sa.Column('job_tokens', sa.BigInteger(), nullable=True),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('trust_points', sa.BigInteger(), nullable=True),
    sa.Column('prayer_progress', sa.BigInteger(), nullable=True),
    sa.Column('items', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('has_secret_access', sa.Boolean(), nullable=True),
    sa.Column('templog', sa.JSON(), nullable=True),
    sa.Column('profile_emoji', sa.String(), nullable=True),
    sa.Column('profile_frame', sa.String(), nullable=True),
    sa.Column('custom_title', sa.String(), nullable=True),
    sa.Column('accent_color', sa.VARCHAR(), nullable=True),
    sa.Column('flex_key', sa.Text(), nullable=True),
    sa.Column('custom_avatar_url', sa.String(), nullable=True),
    sa.Column('profile_banner_url', sa.String(), nullable=True),
    sa.Column('about_me', sa.String(length=250), nullable=True),
    sa.Column('custom_status', sa.String(length=100), nullable=True),
    sa.Column('vibe_text', sa.String(length=100), nullable=True),
    sa.Column('custom_field_title', sa.String(length=50), nullable=True),
    sa.Column('custom_field_value', sa.String(length=250), nullable=True),
    sa.Column('profile_is_private', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('profile_moods', sa.JSON(), server_default='{}', nullable=False),
    sa.Column('ingame_role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('imini_id')
    )
    op.create_table('inventory',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('item_id', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'item_id')
    )
    op.create_table('user_achievements',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('ach_key', sa.Text(), nullable=False),
    sa.Column('unlocked_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['ach_key'], ['achievements.key'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'ach_key')
    )
    op.create_table('user_jobs',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('job_id', sa.String(), nullable=False),
    sa.Column('mastery', sa.Integer(), nullable=False),
    sa.Column('job_skills', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_jobs')
    op.drop_table('user_achievements')
    op.drop_table('inventory')
    op.drop_table('users')
    op.drop_table('user_quests')
    op.drop_table('user_giftcodes')
    op.drop_table('user_events')
    op.drop_table('trust_logs')
    op.drop_table('trivia_questions')
    op.drop_table('thank_logs')
    op.drop_table('shop_meta')
    op.drop_table('shop_items')
    op.drop_table('secret_unlocks')
    op.drop_table('minigames')
    op.drop_table('jobs')
    op.drop_table('items')
    op.drop_table('giftcodes')
    op.drop_table('events')
    op.drop_table('daily_quests')
    op.drop_table('chaos_stats')
    op.drop_table('audit_logs')
    op.drop_table('achievements')
    # ### end Alembic commands ###
